#limits in z direction between which the occupancy map is generated from the octomap
#should be set from floor to the maximum height the robot could possibly reach
occupancy_height_min: 0.0
occupancy_height_max: 2.0

#min distance (in m) to obstacles during astar planning
#not considered during path smoothing, should therefore be a bit higher than robot radius
astar_safety_distance: 0.3

#factor that indicates the corner smoothing of the 2d path
#should lie between 1.5 and 2.5; small values indicate no smoothing
#too large values (higher than 3.0) can lead to unwanted loops at tight corners
astar_smoothing_factor: 2.0

#distance (in m) to corners that is used for smoothing; larger value leads to larger corner arcs
#as no collision checks are performed during smoothing, this value should not be too large
astar_smoothing_distance: 0.3

#approx. distance (in m) between base poses generated after smoothing astar path 
astar_final_smoothed_point_distance: 0.03

#distance in meters around the robot, to which a floor at z=0 is added
#to avoid collisions between the arm and the floor
floor_collision_distance: 3.0

#appox. maximal distance (in m) to final base pose, from where actual 8dof planning starts
distance_birrt_star_planning: 10.0

#pose (in rad) of folded arm during execution of 2d path
#those poses are added to base poses for the part of the plan that is computed with astar
pose_folded_arm: [-0.7, 1.9, 0.0, 1.7, 0.0]

#once a trajectory is found, it is normalized such that at least one of the 8dof has a distance
#to the previous pose given by these values and all other dofs are below
normalized_pose_distances: [0.02, 0.02, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08]

#time between poses that is sent to the controller. maximum distances are given by normalized_pose_distances
time_between_poses: 0.25

#arm trajectory for folding the arm starting at a stretched arm pose given as sets of 5 arm joints
trajectory_folding_arm: [0.2, 2.6, -0.06, 2.4, -1.18, 
0.125, 2.6, -0.06, 2.4, -1.18, 
0.05, 2.6, -0.06, 2.4, -1.18, 
-0.025, 2.6, -0.06, 2.4, -1.18, 
-0.1, 2.6, -0.06, 2.4, -1.18, 
-0.144444, 2.52222, -0.06, 2.4, -1.18, 
-0.188889, 2.44444, -0.06, 2.4, -1.18, 
-0.233333, 2.36667, -0.06, 2.4, -1.18, 
-0.277778, 2.28889, -0.06, 2.4, -1.18, 
-0.322222, 2.21111, -0.06, 2.4, -1.18, 
-0.366667, 2.13333, -0.06, 2.4, -1.18, 
-0.411111, 2.05556, -0.06, 2.4, -1.18, 
-0.455556, 1.97778, -0.06, 2.4, -1.18, 
-0.5, 1.9, -0.06, 2.4, -1.18, 
-0.51, 1.83667, -0.06, 2.32, -1.18, 
-0.52, 1.77333, -0.06, 2.24, -1.18, 
-0.53, 1.71, -0.06, 2.16, -1.18, 
-0.54, 1.64667, -0.06, 2.08, -1.18, 
-0.55, 1.58333, -0.06, 2, -1.18, 
-0.56, 1.52, -0.06, 1.92, -1.18, 
-0.57, 1.45667, -0.06, 1.84, -1.18, 
-0.58, 1.39333, -0.06, 1.76, -1.18, 
-0.59, 1.33, -0.06, 1.68, -1.18, 
-0.6, 1.26667, -0.06, 1.6, -1.18, 
-0.61, 1.20333, -0.06, 1.52, -1.18, 
-0.62, 1.14, -0.06, 1.44, -1.18, 
-0.63, 1.07667, -0.06, 1.36, -1.18, 
-0.64, 1.01333, -0.06, 1.28, -1.18, 
-0.65, 0.95, -0.06, 1.2, -1.18, 
-0.66, 0.886667, -0.06, 1.12, -1.18, 
-0.67, 0.823333, -0.06, 1.04, -1.18, 
-0.68, 0.76, -0.06, 0.96, -1.18, 
-0.69, 0.696667, -0.06, 0.88, -1.18, 
-0.7, 0.633333, -0.06, 0.8, -1.18, 
-0.71, 0.57, -0.06, 0.72, -1.18, 
-0.72, 0.506667, -0.06, 0.64, -1.18, 
-0.73, 0.443333, -0.06, 0.56, -1.18, 
-0.74, 0.38, -0.06, 0.48, -1.18, 
-0.75, 0.316667, -0.06, 0.4, -1.18, 
-0.76, 0.253333, -0.06, 0.32, -1.18, 
-0.77, 0.19, -0.06, 0.24, -1.18, 
-0.78, 0.126667, -0.06, 0.16, -1.18, 
-0.79, 0.0633333, -0.06, 0.08, -1.18, 
-0.8, 0, -0.06, 0, -1.18]

